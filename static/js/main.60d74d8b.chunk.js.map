{"version":3,"sources":["redux/calculate/calculate.utils.js","redux/calculate/calculate.reducer.js","redux/calculate/calculate.types.js","redux/root-reducer.js","redux/store.js","redux/calculate/calculate.selectors.js","components/Display/display.styles.js","components/Display/display.component.jsx","components/Button/button.styles.js","components/Button/button.component.jsx","redux/calculate/calculate.actions.js","components/Button-Panel/button-panel.styles.js","components/Button-Panel/button-panel.component.jsx","containers/app/app.styles.js","containers/app/app.component.jsx","utils/global-styles.js","config/root.jsx","index.jsx"],"names":["operate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","calculate","state","buttonName","total","next","test","result","includes","parseFloat","INITIAL_STATE","calculateReducer","type","reducer","rootReducer","combineReducers","enhancer","compose","applyMiddleware","store","createStore","selectCalculate","selectCalculateTotal","createSelector","selectCalculateNext","DisplayContainer","styled","DisplayValue","mapStateToProps","createStructuredSelector","connect","wide","css","orange","ButtonContainer","props","name","otherProps","onClick","ButtonPanelContainer","ButtonPanel","Container","App","GlobalStyle","createGlobalStyle","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60d74d8b.chunk.js","sourcesContent":["// Import\nimport Big from 'big.js';\n\n// ----------------------------------------------------------------------------------------- //\n\n// Check whether number or not\nconst isNumber = item => {\n  return /[0-9]+/.test(item);\n};\n\n// Operate expression\nconst operate = (numberOne, numberTwo, operation) => {\n  const one = Big(numberOne || '0');\n  const two = Big(numberTwo || (operation === 'รท' || operation === 'x' ? '1' : '0'));\n\n  if (operation === '+') {\n    return one.plus(two).toString();\n  }\n\n  if (operation === '-') {\n    return one.minus(two).toString();\n  }\n\n  if (operation === 'x') {\n    return one.times(two).toString();\n  }\n\n  if (operation === 'รท') {\n    if (two === '0') {\n      alert('Divide by 0 error');\n      return '0';\n    } else {\n      return one.div(two).toString();\n    }\n  }\n\n  throw Error(`Unknown operation '${operation}'`);\n};\n\n// Calculate\nexport const calculate = (state, buttonName) => {\n  if (buttonName === 'AC') {\n    return {\n      total: null,\n      next: null,\n      operation: null,\n    };\n  }\n\n  if (isNumber(buttonName)) {\n    if (buttonName === '0' && state.next === '0') {\n      return {};\n    }\n\n    // If there is an operation, update next\n    if (state.operation) {\n      if (state.next) {\n        return { next: state.next + buttonName };\n      }\n      return { next: buttonName };\n    }\n\n    // If there is no operation, update next and clear the value\n    if (state.next) {\n      const next = state.next === '0' ? buttonName : state.next + buttonName;\n      return {\n        next,\n        total: null,\n      };\n    }\n\n    return {\n      next: buttonName,\n      total: null,\n    };\n  }\n\n  if (buttonName === '%') {\n    if (state.operation && state.next) {\n      const result = operate(state.total, state.next, state.operation);\n\n      return {\n        total: Big(result)\n          .div(Big('100'))\n          .toString(),\n        next: null,\n        operation: null,\n      };\n    }\n\n    if (state.next) {\n      return {\n        next: Big(state.next)\n          .div(Big('100'))\n          .toString(),\n      };\n    }\n\n    return {};\n  }\n\n  if (buttonName === '.') {\n    if (state.next) {\n      // Ignore a . if the next number already has one\n      if (state.next.includes('.')) {\n        return {};\n      }\n\n      return { next: state.next + '.' };\n    }\n\n    return { next: '0.' };\n  }\n\n  if (buttonName === '=') {\n    if (state.next && state.operation) {\n      return {\n        total: operate(state.total, state.next, state.operation),\n        next: null,\n        operation: null,\n      };\n    } else {\n      // '=' with no operation, nothing to do\n      return {};\n    }\n  }\n\n  if (buttonName === '+/-') {\n    if (state.next) {\n      return { next: (-1 * parseFloat(state.next)).toString() };\n    }\n\n    if (state.total) {\n      return { total: (-1 * parseFloat(state.total)).toString() };\n    }\n\n    return {};\n  }\n\n  // Button must be an operation\n\n  // When the user presses an operation button without having entered\n  // a number first, do nothing.\n  // if (!state.next && !state.total) {\n  //   return {};\n  // }\n\n  // User pressed an operation button and there is an existing operation\n  if (state.operation) {\n    return {\n      total: operate(state.total, state.next, state.operation),\n      next: null,\n      operation: buttonName,\n    };\n  }\n\n  // No operation yet, but the user typed one\n\n  // The user hasn't typed a number yet, just save the operation\n  if (!state.next) {\n    return { operation: buttonName };\n  }\n\n  // Save the operation and shift 'next' into 'total'\n  return {\n    total: state.next,\n    next: null,\n    operation: buttonName,\n  };\n};\n","// Import - Types\nimport { CALCULATE } from './calculate.types';\n\n// Import - Utils\nimport { calculate } from './calculate.utils';\n\n// ----------------------------------------------------------------------------------------- //\n\nconst INITIAL_STATE = {\n  total: null,\n  next: null,\n  operation: null,\n};\n\nconst calculateReducer = (state = INITIAL_STATE, { type, buttonName }) => {\n  const reducer = {\n    [CALCULATE]: {\n      ...state,\n      ...calculate(state, buttonName),\n    },\n  };\n\n  return reducer[type] || state;\n};\n\n// Export\nexport default calculateReducer;\n","export const CALCULATE = 'CALCULATE';\n","// Import - Redux\nimport { combineReducers } from 'redux';\n\n// Import - Reducers\nimport calculateReducer from 'redux/calculate/calculate.reducer';\n\n// ----------------------------------------------------------------------------------------- //\n\nconst rootReducer = combineReducers({\n  calculate: calculateReducer,\n});\n\n// Export\nexport default rootReducer;\n","// Import - Redux\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\n// Import - Root Reducer\nimport rootReducer from 'redux/root-reducer';\n\n// ----------------------------------------------------------------------------------------- //\n\n// List of middlewares\nconst middlewares = [];\n\n// Add Redux DevTools Extension\nconst enhancer =\n  process.env.NODE_ENV === 'development'\n    ? composeWithDevTools(applyMiddleware(...middlewares))\n    : compose(applyMiddleware(...middlewares));\n\n// Create Redux Store\nconst store = createStore(rootReducer, enhancer);\n\n// Export\nexport default store;\n","// Import\nimport { createSelector } from 'reselect';\n\n// ----------------------------------------------------------------------------------------- //\n\nconst selectCalculate = state => state.calculate;\n\nexport const selectCalculateTotal = createSelector([selectCalculate], calculate => calculate.total);\n\nexport const selectCalculateNext = createSelector([selectCalculate], calculate => calculate.next);\n","// Import - Styled Components\nimport styled from 'styled-components';\n\n// ----------------------------------------------------------------------------------------- //\n\nexport const DisplayContainer = styled.div`\n  background-color: #858694;\n  color: white;\n  text-align: right;\n  font-weight: 200;\n  flex: 0 0 auto;\n  width: 100%;\n`;\n\nexport const DisplayValue = styled.div`\n  font-size: 2.5rem;\n  padding: 0.2rem 0.7rem 0.1rem 0.5rem;\n`;\n","// Import - Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import - Redux\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCalculateTotal, selectCalculateNext } from 'redux/calculate/calculate.selectors';\n\n// Import - Styles\nimport { DisplayContainer, DisplayValue } from './display.styles';\n\n// ----------------------------------------------------------------------------------------- //\n\nconst Display = ({ total, next }) => (\n  <DisplayContainer>\n    <DisplayValue>{next || total || 0}</DisplayValue>\n  </DisplayContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  total: selectCalculateTotal,\n  next: selectCalculateNext,\n});\n\nDisplay.propTypes = {\n  total: PropTypes.string,\n  next: PropTypes.string,\n};\n\n// Export\nexport default connect(mapStateToProps)(Display);\n","// Import - Styled Components\nimport styled, { css } from 'styled-components';\n\n// ----------------------------------------------------------------------------------------- //\n\nconst wide = css`\n  width: 50%;\n`;\n\nconst orange = css`\n  button {\n    background-color: #f5923e;\n    color: white;\n  }\n`;\n\nconst getButtonStyles = props => {\n  if (props.wide) {\n    return wide;\n  } else if (props.orange) {\n    return orange;\n  } else {\n    return null;\n  }\n};\n\nexport const ButtonContainer = styled.div`\n  display: inline-flex;\n  width: 25%;\n  flex: 1 0 auto;\n\n  button {\n    background-color: #e0e0e0;\n    border: 0;\n    font-size: 1.5rem;\n    margin: 0 1px 0 0;\n    flex: 1 0 auto;\n    padding: 0;\n\n    &:focus {\n      border: 2px solid black;\n      outline: none;\n    }\n  }\n\n  &:last-child button {\n    margin-right: 0;\n  }\n\n  ${getButtonStyles}\n`;\n","// Import - Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Import - Redux\nimport { connect } from 'react-redux';\nimport { calculate } from 'redux/calculate/calculate.actions';\n\n// Import - Styles\nimport { ButtonContainer } from './button.styles';\n\n// ----------------------------------------------------------------------------------------- //\n\nconst Button = ({ name, calculate, ...otherProps }) => (\n  <ButtonContainer {...otherProps}>\n    <button onClick={() => calculate(name)}>{name}</button>\n  </ButtonContainer>\n);\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  calculate: PropTypes.func.isRequired,\n};\n\n// Export\nexport default connect(null, { calculate })(Button);\n","// Import - Types\nimport { CALCULATE } from './calculate.types';\n\n// ----------------------------------------------------------------------------------------- //\n\nexport const calculate = buttonName => ({\n  type: CALCULATE,\n  buttonName,\n});\n","// Import - Styled Components\nimport styled from 'styled-components';\n\n// ----------------------------------------------------------------------------------------- //\n\nexport const ButtonPanelContainer = styled.div`\n  background-color: #858694;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  flex: 1 0 auto;\n\n  > div {\n    width: 100%;\n    margin-bottom: 1px;\n    flex: 1 0 auto;\n    display: flex;\n  }\n`;\n","// Import - Core\nimport React from 'react';\n\n// Import - Components\nimport Button from 'components/Button/button.component';\n\n// Import - Styles\nimport { ButtonPanelContainer } from './button-panel.styles';\n\n// ----------------------------------------------------------------------------------------- //\n\nconst ButtonPanel = () => (\n  <ButtonPanelContainer>\n    <div>\n      <Button name=\"AC\" />\n      <Button name=\"+/-\" />\n      <Button name=\"%\" />\n      <Button name=\"รท\" orange />\n    </div>\n    <div>\n      <Button name=\"7\" />\n      <Button name=\"8\" />\n      <Button name=\"9\" />\n      <Button name=\"x\" orange />\n    </div>\n    <div>\n      <Button name=\"4\" />\n      <Button name=\"5\" />\n      <Button name=\"6\" />\n      <Button name=\"-\" orange />\n    </div>\n    <div>\n      <Button name=\"1\" />\n      <Button name=\"2\" />\n      <Button name=\"3\" />\n      <Button name=\"+\" orange />\n    </div>\n    <div>\n      <Button name=\"0\" wide />\n      <Button name=\".\" />\n      <Button name=\"=\" orange />\n    </div>\n  </ButtonPanelContainer>\n);\n\n// Export\nexport default ButtonPanel;\n","// Import - Styled Components\nimport styled from 'styled-components';\n\n// ----------------------------------------------------------------------------------------- //\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  height: 100%;\n`;\n","// Import - Core\nimport React from 'react';\n\n// Import - Components\nimport Display from 'components/Display/display.component';\nimport ButtonPanel from 'components/Button-Panel/button-panel.component';\n\n// Import - Styles\nimport { Container } from './app.styles';\n\n// ----------------------------------------------------------------------------------------- //\n\nconst App = () => (\n  <Container>\n    <Display />\n    <ButtonPanel />\n  </Container>\n);\n\n// Export\nexport default App;\n","// Import - Styled Components\nimport { createGlobalStyle } from 'styled-components';\n\n// ----------------------------------------------------------------------------------------- //\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  a {\n    text-decoration: none;\n    color: black;\n  }\n\n  html {\n    height: 100%;\n    font-size: 10px;\n  }\n  \n  body {\n    background-color: black;\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n    height: 100%;\n  }\n  \n  #root {\n    height: 100%;\n  }\n  \n  @media (min-width: 400px) and (min-height: 400px) {\n    html {\n      font-size: 20px;\n    }\n  }\n  \n  @media (min-width: 500px) and (min-height: 500px) {\n    html {\n      font-size: 30px;\n    }\n  }\n  \n  @media (min-width: 600px) and (min-height: 600px) {\n    html {\n      font-size: 40px;\n    }\n  }\n  \n  @media (min-width: 800px) and (min-height: 800px) {\n    html {\n      font-size: 50px;\n    }\n  }  \n`;\n\n// Export\nexport default GlobalStyle;\n","// Import - Core\nimport React from 'react';\n\n// Import - Redux\nimport { Provider } from 'react-redux';\nimport store from 'redux/store';\n\n// Import - Router\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// Import - Components\nimport App from 'containers/app/app.component';\n\n// Import - Styles\nimport GlobalStyles from 'utils/global-styles';\n\n// ----------------------------------------------------------------------------------------- //\n\nconst Root = () => (\n  <Provider store={store}>\n    <GlobalStyles />\n\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\n// Export\nexport default Root;\n","// Import - Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Import - Config\nimport Root from 'config/root';\n\n// ----------------------------------------------------------------------------------------- //\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}